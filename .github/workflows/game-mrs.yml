name: Sync and Convert Game Rules to MRS

on:
  schedule:
    - cron: '0 1 * * 1'  # 每周一 UTC 01:00（北京时间09:00）
  workflow_dispatch:

permissions:
  contents: write

jobs:
  game_rules_to_mrs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Git user
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Install mihomo
      run: |
        version=$(curl -sL https://github.com/MetaCubeX/mihomo/releases/download/Prerelease-Alpha/version.txt)
        curl -sL "https://github.com/MetaCubeX/mihomo/releases/download/Prerelease-Alpha/mihomo-linux-amd64-${version}.gz" | \
          gunzip -c > /usr/local/bin/mihomo && chmod +x /usr/local/bin/mihomo

    - name: Fetch Game Rules from repository
      run: |
        # 确保目标目录存在
        mkdir -p rules/Game/action2

        # 拉取所有 YAML 文件
        curl -sL "https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/Game/300hero-cn.yaml" -o rules/Game/action2/300hero-cn.yaml
        curl -sL "https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/Game/another-file.yaml" -o rules/Game/action2/another-file.yaml

    - name: Process and Convert Each YAML File
      run: |
        # 遍历 action2 目录下的所有 YAML 文件并处理
        for file in rules/Game/action2/*.yaml; do
          echo "Processing file: $file"

          # 读取 YAML 文件内容，删除单引号内 IP 地址前后的空格
          python3 -c "
import yaml
import re

# 打开并加载 YAML 文件
with open('$file', 'r') as f:
    data = yaml.safe_load(f)

# 对每个字段进行处理，去掉单引号内的多余空格
def clean_payload(payload):
    for i, item in enumerate(payload):
        if isinstance(item, str) and item.startswith("'") and item.endswith("'"):
            # 去除单引号内的空格
            payload[i] = item.replace(' ', '')
    return payload

# 处理 payload 字段
if 'payload' in data:
    data['payload'] = clean_payload(data['payload'])

# 将处理后的内容保存回原文件
with open('$file', 'w') as f:
    yaml.dump(data, f, default_flow_style=False)
          "
          
          # 使用 mihomo 转换每个 YAML 文件为 MRS 格式
          filename=$(basename -- "$file")
          name="${filename%.yaml}"
          output="rules/Game/${name}.mrs"
          mihomo convert-ruleset ipcidr yaml "$file" "$output"
        done

    - name: Commit and Push Changes
      run: |
        git add .
        git diff-index --quiet HEAD -- || (git commit -m "Converted game rules to MRS format" && git push)