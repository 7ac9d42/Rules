name: Sync and Convert Game Rules to MRS

on:
  schedule:
    - cron: '0 1 * * 1'  # 每周一 UTC 01:00（北京时间09:00）
  workflow_dispatch:

permissions:
  contents: write

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install jq, python3-pip and mihomo
        run: |
          sudo apt-get update
          sudo apt-get install -y jq python3-pip
          pip3 install pyyaml
          # 下载并安装 mihomo
          version=$(curl -sL https://github.com/MetaCubeX/mihomo/releases/download/Prerelease-Alpha/version.txt)
          curl -sL "https://github.com/MetaCubeX/mihomo/releases/download/Prerelease-Alpha/mihomo-linux-amd64-${version}.gz" | gunzip -c > mihomo
          chmod +x mihomo
          sudo mv mihomo /usr/local/bin/

      - name: Create temporary folder for YAML files
        run: |
          mkdir -p rules/Game/action2

      - name: Download YAML files via GitHub API
        run: |
          cd rules/Game/action2
          # 使用 GitHub API 获取 rules/Game 目录下所有文件的 download_url，并过滤出 .yaml 文件
          files=$(curl -s "https://api.github.com/repos/Lanlan13-14/Rules/contents/rules/Game?ref=main" | jq -r '.[].download_url' | grep '\.yaml$')
          for url in $files; do
            echo "Downloading $url"
            curl -sL "$url" -O
          done
          cd -

      - name: Process and convert each YAML file
        run: |
          # 遍历 action2 目录下的所有 YAML 文件，逐个处理并转换
          for file in rules/Game/action2/*.yaml; do
            echo "Processing file: $file"
            # 使用 Python 脚本检查并清除 payload 内单引号中的多余空格，
            # 文件名作为参数传递给 Python 脚本
            python3 - << 'EOF'
import sys, yaml, re
filename = sys.argv[1]
with open(filename, 'r', encoding='utf-8') as f:
    try:
        data = yaml.safe_load(f)
    except Exception as e:
        print("Error loading YAML:", e)
        sys.exit(1)
def clean_payload(payload):
    new_payload = []
    for item in payload:
        if isinstance(item, str):
            # 去除整个字符串前后空格，并替换 / 前后的空格为 /
            new_item = item.strip()
            new_item = re.sub(r'\s*/\s*', '/', new_item)
            new_payload.append(new_item)
        else:
            new_payload.append(item)
    return new_payload
if data and 'payload' in data and isinstance(data['payload'], list):
    data['payload'] = clean_payload(data['payload'])
with open(filename, 'w', encoding='utf-8') as f:
    yaml.dump(data, f, allow_unicode=True, default_flow_style=False)
EOF
            "$file"
            # 转换该 YAML 文件为 MRS 格式，输出到 rules/Game 下，文件名后缀 .mrs
            filename=$(basename -- "$file")
            base="${filename%.yaml}"
            output="rules/Game/${base}.mrs"
            mihomo convert-ruleset ipcidr yaml "$file" "$output"
          done

      - name: Commit and Push Changes
        run: |
          git add .
          git diff-index --quiet HEAD -- || (git commit -m "Converted game rules to MRS format" && git push)