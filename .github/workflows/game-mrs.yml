name: Sync and Convert Game Rules to MRS

on:
  schedule:
    - cron: '0 1 * * 1'  # 每周一 UTC 01:00（北京时间09:00）
  workflow_dispatch:

permissions:
  contents: write

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install dependencies and mihomo
        run: |
          sudo apt-get update
          sudo apt-get install -y jq python3-pip
          pip3 install pyyaml
          # 下载并安装 mihomo
          version=$(curl -sL https://github.com/MetaCubeX/mihomo/releases/download/Prerelease-Alpha/version.txt)
          curl -sL "https://github.com/MetaCubeX/mihomo/releases/download/Prerelease-Alpha/mihomo-linux-amd64-${version}.gz" | gunzip -c > mihomo
          chmod +x mihomo
          sudo mv mihomo /usr/local/bin/

      - name: Create temporary folder for YAML files
        run: |
          mkdir -p rules/Game/action2

      - name: Download YAML files via GitHub API
        run: |
          cd rules/Game/action2
          # 使用 GitHub API 获取 rules/Game 目录下所有文件的 download_url，并过滤出 .yaml 文件
          files=$(curl -s "https://api.github.com/repos/Lanlan13-14/Rules/contents/rules/Game?ref=main" | jq -r '.[].download_url' | grep '\.yaml$')
          for url in $files; do
            echo "Downloading $url"
            curl -sL "$url" -O
          done
          cd -

      - name: Process and convert each YAML file
        run: |
          # 遍历下载的 YAML 文件，每个文件处理后立即转换
          for file in rules/Game/action2/*.yaml; do
            echo "Processing file: $file"
            # 用 Python 处理文件内容：仅针对 payload 列表中的每个字符串，去除单引号内的多余空格
            python3 - << 'EOF'
import sys, yaml, re
filename = sys.argv[1]
with open(filename, 'r', encoding='utf-8') as f:
    try:
        data = yaml.safe_load(f)
    except Exception as e:
        print("Error loading YAML:", e)
        sys.exit(1)

# 如果存在 payload 字段，并且是列表，则对每个字符串项进行处理
if data and 'payload' in data and isinstance(data['payload'], list):
    new_payload = []
    for item in data['payload']:
        if isinstance(item, str):
            # 去除单引号内可能存在的前后空格
            # 这里假设 YAML 文件中 payload 的每个条目都是单引号包裹的字符串
            new_item = item.strip()
            # 如果新项中含有 / 分隔符，移除 / 前后空格（也可以使用更严格的正则表达式）
            new_item = re.sub(r'\s*/\s*', '/', new_item)
            new_payload.append(new_item)
        else:
            new_payload.append(item)
    data['payload'] = new_payload

with open(filename, 'w', encoding='utf-8') as f:
    yaml.dump(data, f, allow_unicode=True, default_flow_style=False)
EOF
            "$file"
            # 转换文件：生成的 .mrs 文件存放在 rules/Game 目录下，文件名与 YAML 文件相同（后缀替换为 .mrs）
            base=$(basename "$file" .yaml)
            output="rules/Game/${base}.mrs"
            mihomo convert-ruleset ipcidr yaml "$file" "$output"
          done

      - name: Commit and Push Changes
        run: |
          git add .
          git diff-index --quiet HEAD -- || (git commit -m "Converted game rules to MRS format" && git push)